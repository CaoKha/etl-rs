[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_USE_WORKSPACE_PROFILE = false

[tasks.docker-build]
command = "docker"
args = ["compose", "build"]

[tasks.docker-run-after-build]
command = "docker"
args = ["compose", "up", "--build"]

[tasks.docker-run]
script = [
    "cargo make docker-down",
    "docker compose up"
]

[tasks.docker-run_detach]
script = [
    "cargo make docker-down",
    "docker compose up -d"
]

[tasks.docker-down]
command = "docker"
args = ["compose", "down", "--remove-orphans"]

[tasks.docker-down-volumes]
command = "docker"
args = ["compose", "down", "--volumes", "--remove-orphans"]

[tasks.docker-clean]
command = "docker"
args = ["compose", "down", "--rmi=all", "--volumes"]

[tasks.example-csv-jdd-to-postgres]
command = "cargo"
args = ["run", "--package", "lib-etl", "--example", "csv_jdd_to_postgres"]
workspace = false

[tasks.example-csv-hdd-to-postgres]
command = "cargo"
args = ["run", "--package", "lib-etl", "--example", "csv_hdd_to_postgres"]
workspace = false

[tasks.example-transform-jdd-normalisation]
command = "cargo"
args = ["run", "--package", "lib-etl", "--example", "transform_jdd_normalisation"]
workspace = false

[tasks.example-transform-hdd-deduplication]
command = "cargo"
args = ["run", "--package", "lib-etl", "--example", "transform_hdd_deduplication"]
workspace = false

[tasks.example-csv-jdd-to-kafka]
command = "cargo"
args = ["run", "--package", "lib-etl", "--example", "csv_jdd_to_kafka"]
workspace = false

[tasks.example-kafka-jdd-to-mongo]
command = "cargo"
args = ["run", "--package", "lib-etl", "--example", "kafka_jdd_to_mongo"]
workspace = false

name: mongo-postgres-redpanda
services:
  mongo:
    image: mongo:7.0.11-jammy
    container_name: mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USR
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PWD
    volumes:
      - mongo-data:/data/db
    networks:
      - localnet
    expose:
      - 27017

  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092,
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.11
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - localnet
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.6.1
    networks:
      - localnet
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0

  postgres:
    image: postgres:latest
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_DB: $POSTGRES_DB_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PWD
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data # Persist data in a volume
    networks:
      - localnet

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGUI_DEFAULT_EMAIL # Change to your email
      PGADMIN_DEFAULT_PASSWORD: $PGUI_DEFAULT_PWD # Change to your password
    ports:
      - "5050:80" # Access pgAdmin web interface at http://localhost:5050
    depends_on:
      - postgres # Ensure pgAdmin starts after PostgreSQL
    networks:
      - localnet

volumes:
  mongo-data:
    driver: local
  kafka-data:
    driver: local
  pgdata:
    driver: local
  redpanda-0: null

networks:
  localnet:
    attachable: true
